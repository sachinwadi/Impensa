<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MainLayoutPanel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BUMAAAAASUVORK5CYII=
</value>
  </data>
</root>